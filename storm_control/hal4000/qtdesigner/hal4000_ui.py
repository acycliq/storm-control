# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hal4000.ui'
#
# Created by: PyQt5 UI code generator 5.7
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(863, 686)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setMaximumSize(QtCore.QSize(10000, 10000))
        MainWindow.setAcceptDrops(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../HAL-4000.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(0, 0))
        self.centralwidget.setMaximumSize(QtCore.QSize(10000, 10000))
        self.centralwidget.setAcceptDrops(True)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setContentsMargins(2, 2, 2, -1)
        self.horizontalLayout_2.setSpacing(2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.containerWidget = QtWidgets.QWidget(self.centralwidget)
        self.containerWidget.setMinimumSize(QtCore.QSize(210, 0))
        self.containerWidget.setMaximumSize(QtCore.QSize(210, 16777215))
        self.containerWidget.setObjectName("containerWidget")
        self.horizontalLayout_2.addWidget(self.containerWidget)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.cameraFrame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cameraFrame.sizePolicy().hasHeightForWidth())
        self.cameraFrame.setSizePolicy(sizePolicy)
        self.cameraFrame.setMinimumSize(QtCore.QSize(645, 550))
        self.cameraFrame.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.cameraFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.cameraFrame.setLineWidth(0)
        self.cameraFrame.setObjectName("cameraFrame")
        self.verticalLayout.addWidget(self.cameraFrame)
        self.notesGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.notesGroupBox.sizePolicy().hasHeightForWidth())
        self.notesGroupBox.setSizePolicy(sizePolicy)
        self.notesGroupBox.setMinimumSize(QtCore.QSize(0, 70))
        self.notesGroupBox.setMaximumSize(QtCore.QSize(16777215, 140))
        self.notesGroupBox.setObjectName("notesGroupBox")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.notesGroupBox)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.notesEdit = QtWidgets.QTextEdit(self.notesGroupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.notesEdit.sizePolicy().hasHeightForWidth())
        self.notesEdit.setSizePolicy(sizePolicy)
        self.notesEdit.setMinimumSize(QtCore.QSize(20, 37))
        self.notesEdit.setMaximumSize(QtCore.QSize(10000, 10000))
        self.notesEdit.setObjectName("notesEdit")
        self.verticalLayout_2.addWidget(self.notesEdit)
        self.verticalLayout.addWidget(self.notesGroupBox)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 863, 25))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionShutter = QtWidgets.QAction(MainWindow)
        self.actionShutter.setObjectName("actionShutter")
        self.actionDirectory = QtWidgets.QAction(MainWindow)
        self.actionDirectory.setObjectName("actionDirectory")
        self.actionIllumination = QtWidgets.QAction(MainWindow)
        self.actionIllumination.setObjectName("actionIllumination")
        self.actionStage = QtWidgets.QAction(MainWindow)
        self.actionStage.setObjectName("actionStage")
        self.actionFocus_Lock = QtWidgets.QAction(MainWindow)
        self.actionFocus_Lock.setObjectName("actionFocus_Lock")
        self.actionSpot_Counter = QtWidgets.QAction(MainWindow)
        self.actionSpot_Counter.setObjectName("actionSpot_Counter")
        self.actionSwitch_Test = QtWidgets.QAction(MainWindow)
        self.actionSwitch_Test.setObjectName("actionSwitch_Test")
        self.actionMisc_Controls = QtWidgets.QAction(MainWindow)
        self.actionMisc_Controls.setObjectName("actionMisc_Controls")
        self.actionProgression = QtWidgets.QAction(MainWindow)
        self.actionProgression.setObjectName("actionProgression")
        self.actionDisconnect = QtWidgets.QAction(MainWindow)
        self.actionDisconnect.setObjectName("actionDisconnect")
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addAction(self.actionShutter)
        self.menuFile.addAction(self.actionDirectory)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HAL-4000"))
        self.notesGroupBox.setTitle(_translate("MainWindow", "Notes"))
        self.menuFile.setTitle(_translate("MainWindow", "Fi&le"))
        self.actionQuit.setText(_translate("MainWindow", "&Quit"))
        self.actionSettings.setText(_translate("MainWindow", "&New Settings"))
        self.actionShutter.setText(_translate("MainWindow", "N&ew Shutter Sequence"))
        self.actionDirectory.setText(_translate("MainWindow", "&Set Working Directory"))
        self.actionIllumination.setText(_translate("MainWindow", "Illumination"))
        self.actionStage.setText(_translate("MainWindow", "Stage"))
        self.actionFocus_Lock.setText(_translate("MainWindow", "Focus Lock"))
        self.actionSpot_Counter.setText(_translate("MainWindow", "Spot Counter"))
        self.actionSwitch_Test.setText(_translate("MainWindow", "Switch Test"))
        self.actionMisc_Controls.setText(_translate("MainWindow", "Misc. Controls"))
        self.actionProgression.setText(_translate("MainWindow", "Progressions"))
        self.actionDisconnect.setText(_translate("MainWindow", "Disconnect"))

